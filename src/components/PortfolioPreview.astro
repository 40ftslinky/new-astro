---

import { Image } from "astro:assets";

const { data, id } = Astro.props.project;

---


<a class="card" href={`/projects/${id}`} >
	<div class="overlay"></div>
	<div class="title"><h5>{data.title}</h5></div>

	<!--If image.url -->
	{
		data.image.url 
		&& 
			(
			<div class="image_wrap">
				<Image src={data.image.url} width={data.image.width} height={data.image.height} alt={data.image.alt} />
			</div>
			)		
	} 
	<!--If no image.url -->
	{
		!data.image.url 
		&& 
			(
				<div>missing asset</div>
			)
	}
	<!--If image.url -->
	<!-- Within JSX, {} braces must contain a Javascript expression -->
	<!-- () can wrap any expression -->
	<!-- 
	{
		(
			condition1 
			&& condition2 
			&& !condition3
			&& (<p>firstdiv<p>)
		) || null
		// there's no reason to ever explicitly return null in JSX (it won't be rendered)
	}
	-->
	{
		// If data
		// data 
		// ? 
		// 	(
			
		// 	<div class="image_wrap">
		// 		<Image src={data.image.url} width={data.image.width} height={data.image.height} alt={data.image.alt} />
		// 	</div>
			
		// 	) 
		// If no data
		// : 
		// 	(
		// 		<div>missing asset</div>

		// 			// <div class="video_wrap">
		// 			// 	<video src={data.video.url} width={data.video.width} height={data.video.height} ></video>
		// 			// </div>
		// 	)
	}
	
</a>

<style>
	:not(.card){}
	.card {
		display: flex;
		flex-direction: column;
		align-content: center;
		justify-content: center;
		overflow: hidden;
		position: relative;
		/*  */
		height: 30vh;
		background: var(--gradient-subtle);
		border: 1px solid var(--gray-800);
		/* border-radius: 0.125rem; */
		border-radius: var(--radius-xsm);	
		box-shadow: var(--shadow-sm);
		/*  */
		text-decoration: none;
		font-family: var(--font-brand);
		font-size: var(--text-lg);
		font-weight: 500;
		/*  */
		transition: box-shadow var(--theme-transition);
	}

	.card:hover {
		box-shadow: var(--shadow-md);
	}

	.card > * {
		grid-area: card;
		/* max-width: 1000px; */
		transition: all var(--theme-transition);
	}
	.card .overlay {
		width: 100%;
		height: 100%;
		background: rgba(145,145,145,0.0);
		position: absolute;
		z-index: 111;
	}
	.card:hover .overlay {
		background: rgba(145,145,145,0.5);
	}

	.card .title {
		visibility: hidden;
		opacity: 0;
		transition: all var(--theme-transition);
		width: 100%;
		height: 100%;
		position: absolute;
		z-index: 222;		
		/* z-index: 1; */
		margin: 0.5rem;
		padding: 1rem 1rem;
		/* color: var(--gray-200); */
		color: white;
	}
	.card:hover .title {
		visibility: visible;
		opacity: 1;
		transition: all var(--theme-transition);
	}

	.title h5 {
		font-weight: 400;
		color: white;
		margin-top: 0;
		/* box-shadow: 5px 5px 0px var(--gray-50); */
		text-shadow: 2px 2px 10px var(--gray-100);
	}
	.card:hover title h5 { }

	.card:hover img {
		transform: scale(1.05);
		transition: all var(--theme-transition);
	}
	.card img {
		transform: scale(1);
		transition: all var(--theme-transition);
	}

	.card img {
		/* grid-area: 1 / 1 / 3 / 3; */
		width: 100%;
		height: 100%;
		min-height: 30vh;
		object-fit: cover;
	}

	@media (min-width: 50em) {
		.card {
			height: 45vh;
			/* border-radius: 1.5rem; */
		}
		.card img {
			min-height: 45vh;
		}

		.title {
			border-radius: 0.9375rem;
		}
	}
</style>

