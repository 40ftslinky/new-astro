---
interface Props {
	variant?: 'offset' | 'even' | 'small' | 'medium';
}

const { variant } = Astro.props;
---

<ul class:list={['grid', { offset: variant === 'even', small: variant === 'small', medium: variant === 'medium' }]}>
	<slot />
</ul>

<!-- styles -->

<style>
	.grid {
		display: grid;
		grid-template-columns: auto;
		grid-auto-rows: 1fr;
		gap: 2rem;
		list-style: none;
		padding: 0;
		margin-top: 4rem;
	}

	.grid.small {
		grid-template-columns: 1fr 1fr 1fr;
		gap: 2rem;
		/* display: flex;
		flex-wrap: wrap;
		justify-content: center; */
	}

	/* If last row contains only one item, make it span both columns. */
	.grid.small > :global(:last-child:nth-child(odd)) {
		grid-column: 1 / 3;
	}

	@media (min-width: 50em) {
		.grid {
			grid-template-columns: 1fr 1fr;
			gap: 2rem;
		}

		.grid.offset {
			--row-offset: 7.5rem;
			padding-bottom: var(--row-offset);
		}

		/* Shift first item in each row vertically to create staggered effect. */
		.grid.offset > :global(:nth-child(odd)) {
			transform: translateY(var(--row-offset));
		}

		/* If last row contains only one item, display it in the second column. */
		.grid.offset > :global(:last-child:nth-child(odd)) {
			grid-column: 2 / 3;
			transform: none;
		}

		.grid.even {
			--row-offset: 0rem;
			padding-bottom: var(--row-offset);
		}

		/* Shift first item in each row vertically to create staggered effect. */
		.grid.even > :global(:nth-child(odd)) {
			transform: translateY(var(--row-offset));
		}

		/* If last row contains only one item, display it in the second column. */
		.grid.even > :global(:last-child:nth-child(odd)) {
			grid-column: 2 / 3;
			transform: none;
		}

		.grid.small {
			display: flex;
			flex-wrap: wrap;
			justify-content: center;
			/* gap: 2rem; */
			gap: 4vw;
		}

		.grid.small > :global(*) {
			/* flex-basis: 20rem; */
			flex-basis: 10rem;
			max-width: 90vw;
		}

		.grid.medium {
			display: flex;
			flex-wrap: wrap;
			justify-content: center;
			gap: 2rem;
			/* gap: 2vw; */
		}

		.grid.medium > :global(*) {
			/* flex-basis: 20rem; */
			flex-basis: 20%;
			max-width: 90vw;
		}
	}
</style>
